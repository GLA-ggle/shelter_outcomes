secondary_PA <- filter(PALevel,!is.na(PA_S) & Age>=11) %>%
group_by(PA_S,Age,Sex,Year)%>%
summarise(count=sum(projected_flow)) %>% ungroup()
PALevel<-rbind(primary_PA,secondary_PA)
}
}
SchoolLevel <- proj_ward_to_school_flow %>%
group_by(School.URN,Age,Sex,Year)%>%
PALevel<-proj_ward_to_school_flow %>%
left_join(urn.to.PA.lookup,by="School.URN")
PALevel<-proj_ward_to_school_flow %>%
left_join(urn.to.PA.lookup,by="School.URN")
primary_PA <- filter(PALevel,!is.na(PA_P) & Age<11) %>%
group_by(PA_P,Age,Sex,Year)%>%
summarise(count=sum(projected_flow)) %>% ungroup()
secondary_PA <- filter(PALevel,!is.na(PA_S) & Age>=11) %>%
group_by(PA_S,Age,Sex,Year)%>%
summarise(count=sum(projected_flow)) %>% ungroup()
head(PALevel)
PALevel<-proj_ward_to_school_flow %>%
left_join(urn.to.PA.lookup,by="School.URN")
primary_PA <- filter(PALevel,!is.na(PA_P) & Age<11) %>%
group_by(PA_P,Age,Sex,Year)%>%
summarise(count=sum(projected_flow)) %>% ungroup() %>%
rename(PA=PA_P)
secondary_PA <- filter(PALevel,!is.na(PA_S) & Age>=11) %>%
group_by(PA_S,Age,Sex,Year)%>%
summarise(count=sum(projected_flow)) %>% ungroup() %>%
rename(PA=PA_S)
PALevel<-rbind(primary_PA,secondary_PA)
head(PALevel)
rm(list=ls())
runApp('PracticeShiny')
runApp('PracticeShiny')
runApp('PracticeShiny')
runApp('PracticeShiny')
getwd()
debugSource('/Volumes/d&pa/Projections/R Models/SchoolRollProjectionModel/DebugSRPservice.R')
head(proj_ward_to_school_flow)
head(proj_ward_to_school_flow)
head(urn.to.PA.lookup)
shiny::runApp('PracticeShiny')
shiny::runApp('PracticeShiny')
shiny::runApp('PracticeShiny')
shiny::runApp('SchoolRollProjectionModel/RunSRP')
shiny::runApp('SchoolRollProjectionModel/RunSRP')
shiny::runApp('SchoolRollProjectionModel/RunSRP')
shiny::runApp('SchoolRollProjectionModel/RunSRP')
choose.files()
require(dplyr)
require(shiny)
require(tidyr)
require(data.table)
choose.files()
sessionInfo()
require(utils)
packageVersion(utils)
packageVersion("utils")
shiny::runApp('SchoolRollProjectionModel/RunSRP')
rm(list=ls())
getws()
getwd()
constituancies<- readOGR("Downloads/constituencies/constituencies.shp", layer="constituencies", verbose = F)
library(dplyr) ; library(rgdal) ; library(leaflet) ; library(maptools)
constituancies<- readOGR("Downloads/constituencies/constituencies.shp", layer="constituencies", verbose = F)
head(constituancies@data)
wards <- readOGR("Downloads/ward/ward.results.formatted.shp", layer="ward.results.formatted", verbose = F)
head(wards@data)
admin<-wards <- readOGR("Downloads/KEN_adm/KEN_adm0.shp", layer="KEN_adm0.shp", verbose = F)
admin<-wards <- readOGR("Downloads/KEN_adm/KEN_adm0.shp", layer="KEN_adm0", verbose = F)
head(admin@data)
admin@data
admin<- readOGR("Downloads/KEN_adm/KEN_adm0.shp", layer="KEN_adm0", verbose = F)
head(admin@data)
admin@data
admin<- readOGR("Downloads/gpw-v4-national-identifier-grid/gpw-v4-national-identifier-grid_polygons.shp", layer="gpw-v4-national-identifier-grid_polygons", verbose = F)
head(admin@data)
unique(admin@data$NAME0)
admin<- readOGR("Downloads/KEN_adm/KEN_adm5.shp", layer="KEN_adm5", verbose = F)
head(admin@data)
head(wards@data)
wards <- readOGR("Downloads/ward/ward.results.formatted.shp", layer="ward.results.formatted", verbose = F)
head(wards@data)
library(sp)
head(admin@data)
adminR<-readRDS("Downloads/KEN_adm3.rds")
head(adminR)
head(adminR@data)
head(admin@data)
unique(admin@data$NAME_3)
unique(adminR@data$NAME_3)
length(unique(adminR@data$NAME_3))
length(unique(admin@data$NAME_5))
length(unique(admin@data$NAME_4))
length(unique(admin@data$NAME_3))
length(unique(admin@data$NAME_2))
length(unique(admin@data$NAME_1))
head(admin@data)
length(unique(adminR@data$NAME_1))
length(unique(adminR@data$NAME_2))
length(unique(adminR@data$NAME_3))
adminShp<-readOGR("Downloads/KEN_adm_shp/KEN_adm3.shp", layer="KEN_adm3", verbose = F)
length(unique(adminShp@data$NAME_3))
length(unique(adminShp@data$NAME_2))
length(unique(adminShp@data$NAME_1))
head(adminR@data)
head(wards@data)
length(unique(wards@data$NAME))
length(unique(wards@data$CONSTITUEN))
head(admin@data)
admin4<- readOGR("Downloads/KEN_adm/KEN_adm4.shp", layer="KEN_adm4", verbose = F)
head(admin4@data)
admin3<- readOGR("Downloads/KEN_adm/KEN_adm3.shp", layer="KEN_adm3", verbose = F)
head(admin3@data)
admin2<- readOGR("Downloads/KEN_adm/KEN_adm2.shp", layer="KEN_adm2", verbose = F)
head(admin2@data)
admin2<- readOGR("Downloads/KEN_adm/KEN_adm1.shp", layer="KEN_adm1", verbose = F)
head(admin1@data)
head(admin2@data)
unique(admin2@data$TYPE_1)
unique(admin2@data$ENGTYPE_1)
unique(admin3@data$ENGTYPE_3)
unique(admin3@data$TYPE_3)
unique(admin4@data$TYPE_4)
unique(admin5@data$TYPE_5)
unique(admin@data$TYPE_5)
admin2<- readOGR("Downloads/KEN_adm/KEN_adm2.shp", layer="KEN_adm2", verbose = F)
unique(admin2@data$TYPE_2)
admin1<- readOGR("Downloads/KEN_adm/KEN_adm1.shp", layer="KEN_adm1", verbose = F)
unique(admin1@data$TYPE_1)
unique(admin1@data$NAME_1)
head(admin)
head(admin@data)
KenyaGeographies<-admin@data
data<-read.csv("Downloads/threaded-data.csv")
data<-read.csv("Downloads/threaded-data.csv",stringsAsFactors = F)
head(data)
head(data,20)
head(data,30)
unique(data$lang)
setwd("~/shelter_animals/")
data <- read.csv("train.csv",stringsAsFactors = F)
head(data)
setwd("~/shelter_animals/")
data <- read.csv("train.csv",stringsAsFactors = F)
head(data)
names(data)
setwd("~/shelter_animals/")
shelter_data <- read.csv("train.csv",stringsAsFactors = F)
head(shelter_data)
names(shelter_data)
unique(shelter_data$OutcomeType)
unique(shelter_data$OutcomeType)
unique(shelter_data$OutcomeSubtype)
unique(shelter_data$AnimalType)
hist(shelter_data$AnimalType)
barplot(shelter_data$AnimalType)
barplot(table(shelter_data$AnimalType))
summary(shelter_data)
count.fields(shelter_data$AnimalType))
count.fields(shelter_data$AnimalType)
setwd("~/shelter_animals/")
require(dplyr)
require(tidyr)
shelter_data <- read.csv("train.csv",stringsAsFactors = F)
head(shelter_data)
count(shelter_data,AnimalType)
barplot(table(shelter_data$AnimalType))
print(count(shelter_data,AnimalType))
barplot(table(shelter_data$AnimalType))
unique(shelter_data$Breed)
count(shelter_data,Breed)
count(shelter_data,Breed) %>% arrange(n)
count(shelter_data,Breed) %>% arrange(n, desc=T)
count(shelter_data,Breed) %>% arrange(desc(n))
View(shelter_data)
fiter(shelter_data,Name=="")
filter(shelter_data,Name=="")
str(shelter_data)
nrow(filter(shelter_data,DateTime==""))
nrow(filter(shelter_data,OutcomeType==""))
unique(shelter_data$SexuponOutcome)
count(shelter_data,SexuponOutcome)
filter(shelter_data,SexuponOutcome=="")
unique(shelter_data$OutcomeSubtype)
unique(shelter_data$OutcomeType)
unique(shelter_data$AgeuponOutcome)
count(shelter_data,AgeuponOutcome)
filter(shelter_data,Breed=="unknown")
filter(shelter_data,Breed=="Unknown")
a <- unique(shelter_data$Breed)
a
filter(shelter_data,Breed=="")
shelter_data[is.na(shelter_data)]
filter(shelter_data,Color=="")
filter(shelter_data,Color=="Unknown")
filter(shelter_data,Color=="unknown")
grepl("\d{2}/\d{2}/\d{4}","33/33/3333")
grepl("\\d{2}/\\d{2}/\\d{4}","33/33/3333")
grepl("\\d{2}/\\d{2}/\\d{4}","33/33/333")
grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}","33/33/3333 33:33")
grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}","33/33/3333 33:3")
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
nrow(filter(shelter_data,grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime))
View(dates_out)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime))
rm(data)
View(dates_out)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime))
unique(dates_out$day_date)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{2}/\\d{2}/\\d{4} \\(d{2}):\\d{2}","\\1",DateTime)
min_date = gsub("\\d{2}/\\d{2}/\\d{4} \\d{2}:(\\d{2})","\\1",DateTime))
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{2}/\\d{2}/\\d{4} \\(d{2}):\\d{2}","\\1",DateTime),
min_date = gsub("\\d{2}/\\d{2}/\\d{4} \\d{2}:(\\d{2})","\\1",DateTime))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{2}/\\d{2}/\\d{4} \\(d{2}):\\d{2}","\\1",DateTime),
min_date = gsub("\\d{2}/\\d{2}/\\d{4} \\d{2}:(\\d{2})","\\1",DateTime))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{2}/\\d{2}/\\d{4} (\\d{2}):\\d{2}","\\1",DateTime),
min_date = gsub("\\d{2}/\\d{2}/\\d{4} \\d{2}:(\\d{2})","\\1",DateTime))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{2}/\\d{2}/\\d{4} (\\d{2}):\\d{2}","\\1",DateTime),
min_date = gsub("\\d{2}/\\d{2}/\\d{4} \\d{2}:(\\d{2})","\\1",DateTime),
date = gsub("(\\d{2}/\\d{2}/\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{2}/\\d{2}/\\d{4} (\\d{2}:\\d{2})","\\1",DateTime))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
nrow(filter(shelter_data,!grepl("\\d{2}/\\d{2}/\\d{4} \\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("(\\d{2})/\\d{2}/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{2}/(\\d{2})/\\d{4} \\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("\\d{2}/\\d{2}/(\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{2}/\\d{2}/\\d{4} (\\d{2}):\\d{2}","\\1",DateTime),
min_date = gsub("\\d{2}/\\d{2}/\\d{4} \\d{2}:(\\d{2})","\\1",DateTime),
date = gsub("(\\d{2}/\\d{2}/\\d{4}) \\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{2}/\\d{2}/\\d{4} (\\d{2}:\\d{2})","\\1",DateTime),
weekday = weekdays(as.Date(date)))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
?as.Date
head(dates_out$date)
setwd("~/shelter_animals/")
require(dplyr)
require(tidyr)
shelter_data <- read.csv("train.csv",stringsAsFactors = F)
head(shelter_data)
nrow(filter(shelter_data,!grepl("\\d{4}/\\d{2}/\\d{2} \\d{2}:\\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("\\d{4}/\\d{2}/(\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{4}/(\\d{2})/\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("(\\d{4})/\\d{2}/\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{4}/\\d{2}/\\d{2} (\\d{2}):\\d{2}:\\d{2}","\\1",DateTime),
min_date = gsub("\\d{4}/\\d{2}/\\d{2} \\d{2}:(\\d{2}):\\d{2}","\\1",DateTime),
date = gsub("(\\d{4}/\\d{2}/\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{4}/\\d{2}/\\d{2} (\\d{2}:\\d{2}):\\d{2}","\\1",DateTime),
weekday = weekdays(as.Date(date, "%y/%m/%d")))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
View(dates_out)
head(shelter_data$DateTime)
nrow(filter(shelter_data,!grepl("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("\\d{4}-\\d{2}-(\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{4}-(\\d{2})-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("(\\d{4})-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}):\\d{2}:\\d{2}","\\1",DateTime),
min_date = gsub("\\d{4}-\\d{2}-\\d{2} \\d{2}:(\\d{2}):\\d{2}","\\1",DateTime),
date = gsub("(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}):\\d{2}","\\1",DateTime),
weekday = weekdays(as.Date(date, "%y-%m-%d")))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
nrow(filter(shelter_data,!grepl("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("\\d{4}-\\d{2}-(\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{4}-(\\d{2})-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("(\\d{4})-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}):\\d{2}:\\d{2}","\\1",DateTime),
min_date = gsub("\\d{4}-\\d{2}-\\d{2} \\d{2}:(\\d{2}):\\d{2}","\\1",DateTime),
date = gsub("(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}):\\d{2}","\\1",DateTime),
weekday = weekdays(as.Date(date))
max(dates_out$day_date);min(dates_out$day_date)
nrow(filter(shelter_data,!grepl("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("\\d{4}-\\d{2}-(\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{4}-(\\d{2})-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("(\\d{4})-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}):\\d{2}:\\d{2}","\\1",DateTime),
min_date = gsub("\\d{4}-\\d{2}-\\d{2} \\d{2}:(\\d{2}):\\d{2}","\\1",DateTime),
date = gsub("(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}):\\d{2}","\\1",DateTime),
weekday = weekdays(as.Date(date)))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
nrow(filter(shelter_data,!grepl("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("\\d{4}-\\d{2}-(\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{4}-(\\d{2})-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("(\\d{4})-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}):\\d{2}:\\d{2}","\\1",DateTime),
min_date = gsub("\\d{4}-\\d{2}-\\d{2} \\d{2}:(\\d{2}):\\d{2}","\\1",DateTime),
date = gsub("(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}):\\d{2}","\\1",DateTime),
am_pm = ifelse(hour_date<12,"am","pm"),
weekday = weekdays(as.Date(date)))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
nrow(filter(shelter_data,!grepl("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",DateTime)))
dates_out <- shelter_data %>% mutate(day_date=gsub("\\d{4}-\\d{2}-(\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
month_date=gsub("\\d{4}-(\\d{2})-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
year_date = gsub("(\\d{4})-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
hour_date = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}):\\d{2}:\\d{2}","\\1",DateTime),
min_date = gsub("\\d{4}-\\d{2}-\\d{2} \\d{2}:(\\d{2}):\\d{2}","\\1",DateTime),
date = gsub("(\\d{4}-\\d{2}-\\d{2}) \\d{2}:\\d{2}:\\d{2}","\\1",DateTime),
time = gsub("\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}):\\d{2}","\\1",DateTime),
am_pm = ifelse(hour_date<12,"am","pm"),
weekday = weekdays(as.Date(date)))
max(dates_out$day_date);min(dates_out$day_date)
max(dates_out$month_date);min(dates_out$month_date)
max(dates_out$year_date);min(dates_out$year_date)
max(dates_out$hour_date);min(dates_out$hour_date)
max(dates_out$min_date);min(dates_out$min_date)
date_data <- select(dates_out,AnimalID,day_date:weekday)
View(date_data)
getwd()
write.csv(date_data,file="new_variables/date_time.csv",row.names = F)
rm(list=ls())
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
date_time <- read.csv("new_variables/date_time.csv",stringsAsFactors = F)
master_data <- left_join(master_data,date_time,by="AnimalID")
head(master_data)
life_stage <- read.csv("new_variables/life_stage.csv",stringsAsFactors = F)
head(life_stage)
master_data <- left_join(master_data,life_stage,by="AnimalID")
wil <- read.csv("new_variables/new_vars_wil.csv",stringsAsFactors = F)
head(wil)
master_data <- left_join(master_data,wil,by="AnimalID")
head(master_data)
write.csv(master_data,file="train_master.csv",row.names = F)
rm(list=ls())
data <- read.csv("train_master.csv")
head(data)
rm(data)
data <- read.csv("train_master.csv",stringsAsFactors = )
data <- read.csv("train_master.csv",stringsAsFactors = F)
nrow(data)
rm(data)
shelter_data <- read.csv("train_master.csv",stringsAsFactors = F)
nrow(shelter_data)
names(shelter_data)
filterd_data <- filter(shelter_data,SexuponOutcome!="" & AgeuponOutcome!="")
nrow(filterd_data)
View(filterd_data)
write.csv(filtered_data,file="train_master.csv",row.names = F)
write.csv(filterd_data,file="train_master.csv",row.names = F)
install.packages("randomForest")
rm(list=ls)
rm(list=ls())
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
wil <- read.csv("new_variables/name_vars_wil.csv",stringsAsFactors = )
wil <- read.csv("new_variables/name_vars_wil.csv",stringsAsFactors = F)
head(wil)
wil <- rename(wil,popular_human_name=popular_name)
head(wil)
wil <- select(wil,-Name)
head(wil)
master_data <- left_join(master_data,wil,by="AnimalID")
head(master_data)
nrow(master_data)
write.csv(master_data,file="train_master.csv",row.names = F)
rm(wil)
rm(master_data)
read.csv("train_master.csv",stringsAsFactors = F)
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
head(master_data)
colours <- read.csv("new_variables/colors.csv",stringsAsFactors = F)
head(colours)
colours <- select(colours,-X)
nrow(master_data)
master_data <- left_join(master_data,colours,by=c("AnimalID"="ID"))
head(master_data)
nrow(master_data)
rm(colours)
years <- read.csv("new_variables/years.csv",stringsAsFactors = F)
head(years)
year <- select(years,X)
years <- years %>% select(-X) %>% rename(age_years=years)
head(years)
master_data <- left_join(master_data,years,by=c("AnimalID"="ID"))
head(master_data)
nrow(master_data)
write.csv(master_data,file="train_master.csv",row.names = F)
rm(ls())
rm(list=ls())
a <- read.csv("train_master.csv",stringsAsFactors = F)
head(a)
rm(list=ls())
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
head(master_data)
breed <- read.csv("new_variables/breed_so.csv",stringsAsFactors = F)
head(breed)
head(master_data)
rm(list=ls())
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
breed <- read.csv("new_variables/breed_so.csv",stringsAsFactors = F)
head(breed)
breed <- select(breed,-X)
head(breed)
master_data <- left_join(master_data,breed,by=c("AnimalID"="train.AnimalID"))
nrow(master_data)
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
nrow(master_data)
count(breed,train.AnimalID) %>% filter(n>1)
rm(list=ls())
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
head(master_data)
sentiment <- read.csv("new_variables/sentiment.csv",stringsAsFactors = F)
head(sentiment)
sentiment <- rename(sentiment_score=sentiment)
sentiment <- read.csv("new_variables/sentiment.csv",stringsAsFactors = F)
sentiment <- rename(sentiment_score=score)
sentiment <- rename(sentiment,sentiment_score=score)
head(sentiment)
master_data <- left_join(master_data,sentiment,by="AnimalID")
head(master_data)
write.csv(master_data,file="train_master.csv",row.names = F)
head(sean)
rm(list=ls())
read.csv("train_master.csv",stringsAsFactors = F)
mast
master_data <- read.csv("train_master.csv",stringsAsFactors = F)
read.csv("new_variables/breed_so.csv",stringsAsFactors = F)
breed <0 read.csv("new_variables/breed_so.csv",stringsAsFactors = F)
breed <- read.csv("new_variables/breed_so.csv",stringsAsFactors = F)
head(breed)
breed <- select(breed,-X)
head(breed)
dups <- count(breed,train.AnimalID) %>% filter(n>1)
head(dups)
filter(breed,train.AnimalID %in% dups$train.AnimalID)
unique(breed$hairtype)
filter(breed,train.AnimalID %in% dups$train.AnimalID) %>% mutate(hairtype="otherhair") %>% unique()
fixed <- filter(breed,train.AnimalID %in% dups$train.AnimalID) %>% mutate(hairtype="otherhair") %>% unique()
deduped <- filter(breed,!train.AnimalID %in% dups$train.AnimalID) %>% rbind(fixed)
nrow(deduped)
nrow(master)
nrow(master_data)
master_data <- left_join(master_data,deduped,by=c("AnimalID"="train.AnimalID"))
nrow(master_data)
unique(master_data$hairtype)
unique(deduped$hairtype)
filter(master_data, is.na(hairtype))
filter(breed, train.AnimalID %in% c("A716997","A698128"))
